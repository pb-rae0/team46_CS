module x_bit_right_a_shifter #(
  // parameter declaration, to be set during module instantiation
  // default value given is 8
    SIZE = 32 : SIZE > 0,
    SHIFT = 8 : SHIFT > -1 & SHIFT < 32
  )(
    input a[SIZE],
    input do_shift,
    input pad,
    output out[SIZE]
  ) {
  
    mux_2 mux_32[SIZE]
    sig shifted_bits[SIZE]
  
  always {
    // connect the selector of each mux_2 with shift 
        mux_32.s0 = SIZEx{do_shift}
    // assign value to shifted_bits[32] depending on the value of SHIFT
        shifted_bits = c{SHIFTx{pad}, a[31:SHIFT]}
    
    // use a repeat-loop to:
        repeat(i, SIZE) {
            // connect input[0] of each mux_2 with a[i]
            mux_32.in[i][0] = a[i]
            // connect input[1] of each mux_2 with the shifted_bits[i]
            mux_32.in[i][1] = shifted_bits[i]
        }
        out = mux_32.out
  }
}